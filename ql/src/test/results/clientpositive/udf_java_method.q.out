PREHOOK: query: DESCRIBE FUNCTION java_method
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION java_method
POSTHOOK: type: DESCFUNCTION
java_method(class,method[,arg1[,arg2..]]) calls method with reflection
PREHOOK: query: DESCRIBE FUNCTION EXTENDED java_method
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED java_method
POSTHOOK: type: DESCFUNCTION
java_method(class,method[,arg1[,arg2..]]) calls method with reflection
Synonyms: reflect
Use this UDF to call Java methods by matching the argument signature

PREHOOK: query: -- java_method() is a synonym for reflect()

EXPLAIN EXTENDED
SELECT java_method("java.lang.String", "valueOf", 1),
       java_method("java.lang.String", "isEmpty"),
       java_method("java.lang.Math", "max", 2, 3),
       java_method("java.lang.Math", "min", 2, 3),
       java_method("java.lang.Math", "round", 2.5),
       round(java_method("java.lang.Math", "exp", 1.0), 6),
       java_method("java.lang.Math", "floor", 1.9)
FROM src tablesample (1 rows)
PREHOOK: type: QUERY
POSTHOOK: query: -- java_method() is a synonym for reflect()

EXPLAIN EXTENDED
SELECT java_method("java.lang.String", "valueOf", 1),
       java_method("java.lang.String", "isEmpty"),
       java_method("java.lang.Math", "max", 2, 3),
       java_method("java.lang.Math", "min", 2, 3),
       java_method("java.lang.Math", "round", 2.5),
       round(java_method("java.lang.Math", "exp", 1.0), 6),
       java_method("java.lang.Math", "floor", 1.9)
FROM src tablesample (1 rows)
POSTHOOK: type: QUERY
ABSTRACT SYNTAX TREE:
  
TOK_QUERY
   TOK_FROM
      TOK_TABREF
         TOK_TABNAME
            src
         TOK_TABLESPLITSAMPLE
            TOK_ROWCOUNT
            1
   TOK_INSERT
      TOK_DESTINATION
         TOK_DIR
            TOK_TMP_FILE
      TOK_SELECT
         TOK_SELEXPR
            TOK_FUNCTION
               java_method
               "java.lang.String"
               "valueOf"
               1
         TOK_SELEXPR
            TOK_FUNCTION
               java_method
               "java.lang.String"
               "isEmpty"
         TOK_SELEXPR
            TOK_FUNCTION
               java_method
               "java.lang.Math"
               "max"
               2
               3
         TOK_SELEXPR
            TOK_FUNCTION
               java_method
               "java.lang.Math"
               "min"
               2
               3
         TOK_SELEXPR
            TOK_FUNCTION
               java_method
               "java.lang.Math"
               "round"
               2.5
         TOK_SELEXPR
            TOK_FUNCTION
               round
               TOK_FUNCTION
                  java_method
                  "java.lang.Math"
                  "exp"
                  1.0
               6
         TOK_SELEXPR
            TOK_FUNCTION
               java_method
               "java.lang.Math"
               "floor"
               1.9


STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        TableScan
          alias: src
          Row Limit Per Split: 1
          Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: COMPLETE
          GatherStats: false
          Select Operator
            expressions: reflect('java.lang.String','valueOf',1) (type: string), reflect('java.lang.String','isEmpty') (type: string), reflect('java.lang.Math','max',2,3) (type: string), reflect('java.lang.Math','min',2,3) (type: string), reflect('java.lang.Math','round',2.5) (type: string), round(reflect('java.lang.Math','exp',1.0), 6) (type: double), reflect('java.lang.Math','floor',1.9) (type: string)
            outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6
            Statistics: Num rows: 500 Data size: 556000 Basic stats: COMPLETE Column stats: COMPLETE
            ListSink

PREHOOK: query: SELECT java_method("java.lang.String", "valueOf", 1),
       java_method("java.lang.String", "isEmpty"),
       java_method("java.lang.Math", "max", 2, 3),
       java_method("java.lang.Math", "min", 2, 3),
       java_method("java.lang.Math", "round", 2.5),
       round(java_method("java.lang.Math", "exp", 1.0), 6),
       java_method("java.lang.Math", "floor", 1.9)
FROM src tablesample (1 rows)
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: SELECT java_method("java.lang.String", "valueOf", 1),
       java_method("java.lang.String", "isEmpty"),
       java_method("java.lang.Math", "max", 2, 3),
       java_method("java.lang.Math", "min", 2, 3),
       java_method("java.lang.Math", "round", 2.5),
       round(java_method("java.lang.Math", "exp", 1.0), 6),
       java_method("java.lang.Math", "floor", 1.9)
FROM src tablesample (1 rows)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
1	true	3	2	3	2.718282	1.0
